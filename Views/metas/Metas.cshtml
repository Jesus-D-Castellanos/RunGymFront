@model RunGymFront.Models.Metas
@{
    Layout = null;
}

<head>
    <title>Metas y Objetivos | RunGym</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link href="~/Content/css/Metas.css" rel="stylesheet" />
</head>

<div class="container">
    <div class="form-container">
        <div class="logo-container text-center mb-4">
            <img src="~/images/Login/Logo.png" alt="RunGym Logo" class="logo img-fluid">
        </div>

        <h2 class="text-center">Metas y Objetivos</h2>
        <p class="text-center lead mb-4">Completa tus datos para personalizar tu experiencia</p>

        @using (Html.BeginForm("Metas", "Metas", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <div class="mb-4">
                @Html.LabelFor(m => m.MetaPrincipal)
                @Html.DropDownListFor(m => m.MetaPrincipal, new List<SelectListItem>
                {
                    new SelectListItem { Text = "Seleccione una opción", Value = "" },
                    new SelectListItem { Text = "Perder peso", Value = "Perder peso" },
                    new SelectListItem { Text = "Ganar peso/Músculo", Value = "Ganar peso/Músculo" },
                }, new { @class = "form-select" })
                @Html.ValidationMessageFor(m => m.MetaPrincipal, "", new { @class = "text-danger" })
            </div>

            <div class="mb-4">
                @Html.LabelFor(m => m.CuerpoActual)
                @Html.TextBoxFor(m => m.CuerpoActual, new { @class = "form-control", placeholder = "Ej: Sobrepeso, delgado, atlético..." })
                @Html.ValidationMessageFor(m => m.CuerpoActual, "", new { @class = "text-danger" })
                <small class="form-text">Describe tu condición física actual</small>
            </div>

            <div class="mb-4">
                @Html.LabelFor(m => m.CuerpoDeseado)
                @Html.TextBoxFor(m => m.CuerpoDeseado, new { @class = "form-control", placeholder = "Ej: Definido, musculoso, saludable..." })
                @Html.ValidationMessageFor(m => m.CuerpoDeseado, "", new { @class = "text-danger" })
                <small class="form-text">¿Cómo te gustaría verte?</small>
            </div>

            <div class="md-4">
                @Html.LabelFor(m => m.FechaObjetivo)
                @Html.TextBoxFor(m => m.FechaObjetivo, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                @Html.ValidationMessageFor(m => m.FechaObjetivo, "", new { @class = "text-danger" })
                <small class="form-text">Dijite la fecha de tu objetivo principal!</small>
            </div>
            <br />
            <div class="mb-4">
                @Html.LabelFor(m => m.Descripción)
                @Html.TextAreaFor(m => m.Descripción, new
                {
                    @class = "form-control",
                    placeholder = "Cuéntanos más sobre ti: experiencia previa, lesiones, preferencias, etc. 😊",
                    rows = "4"
                })
                @Html.ValidationMessageFor(m => m.Descripción, "", new { @class = "text-danger" })
            </div>

            <div class="d-grid gap-2">
                <button type="submit" class="btn btn-primary btn-lg">
                    Continuar <i class="fas fa-arrow-right ms-2"></i>
                </button>
            </div>
        }
    </div>
</div>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Efecto al enfocar los inputs
        const inputs = document.querySelectorAll('.form-control, .form-select');

        inputs.forEach(input => {
            input.addEventListener('focus', function () {
                this.parentElement.querySelector('.form-label').style.textShadow = 'var(--text-glow)';
            });

            input.addEventListener('blur', function () {
                this.parentElement.querySelector('.form-label').style.textShadow = 'none';
            });
        });
    });
</script>